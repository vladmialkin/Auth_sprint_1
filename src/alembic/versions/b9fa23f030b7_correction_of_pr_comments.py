"""Correction of PR comments.

Revision ID: b9fa23f030b7
Revises: 317d5f994600
Create Date: 2024-08-28 10:20:22.685810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b9fa23f030b7'
down_revision: Union[str, None] = '317d5f994600'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('refreshtoken',
    sa.Column('token', sa.String(length=512), nullable=False),
    sa.Column('expiration_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('refresh_token')
    op.alter_column('role', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               existing_nullable=False)
    op.alter_column('session', 'user_agent',
               existing_type=sa.TEXT(),
               type_=sa.String(length=512),
               existing_nullable=False)
    op.drop_constraint('session_user_id_fkey', 'session', type_='foreignkey')
    op.drop_constraint('session_refresh_token_id_fkey', 'session', type_='foreignkey')
    op.create_foreign_key(None, 'session', 'refreshtoken', ['refresh_token_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'session', 'user', ['user_id'], ['id'])
    op.alter_column('user', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               existing_nullable=False)
    op.alter_column('user', 'password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'password',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user', 'email',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'session', type_='foreignkey')
    op.drop_constraint(None, 'session', type_='foreignkey')
    op.create_foreign_key('session_refresh_token_id_fkey', 'session', 'refresh_token', ['refresh_token_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('session_user_id_fkey', 'session', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('session', 'user_agent',
               existing_type=sa.String(length=512),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('role', 'name',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('refresh_token',
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expiration_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='refresh_token_pkey')
    )
    op.drop_table('refreshtoken')
    # ### end Alembic commands ###
